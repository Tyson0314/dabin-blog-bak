(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{686:function(s,t,a){"use strict";a.r(t);var n=a(14),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("题目来自百度二面。")]),s._v(" "),a("h2",{attrs:{id:"题目描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[s._v("#")]),s._v(" 题目描述")]),s._v(" "),a("p",[a("strong",[s._v("已知某个文件内包含大量电话号码，每个号码为8位数字，如何统计不同号码的个数？")])]),s._v(" "),a("h2",{attrs:{id:"思路分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路分析"}},[s._v("#")]),s._v(" 思路分析")]),s._v(" "),a("p",[s._v("这类题目其实是求解数据重复的问题。对于这类问题，可以使用"),a("strong",[s._v("位图法")]),s._v("处理")]),s._v(" "),a("p",[s._v("8位电话号码可以表示的范围为00000000～99999999。如果用 bit表示一个号码，那么总共需要1亿个bit，总共需要大约"),a("strong",[s._v("10MB")]),s._v("的内存。")]),s._v(" "),a("p",[s._v("申请一个位图并初始化为0，然后遍历所有电话号码，"),a("strong",[s._v("把遍历到的电话号码对应的位图中的bit设置为1")]),s._v("。当遍历完成后，如果bit值为1，则表示这个电话号码在文件中存在，否则这个bit对应的电话号码在文件中不存在。")]),s._v(" "),a("p",[s._v("最后这个"),a("strong",[s._v("位图中bit值为1的数量")]),s._v("就是不同电话号码的个数了。")]),s._v(" "),a("p",[s._v("那么如何确定电话号码对应的是位图中的哪一位呢？")]),s._v(" "),a("p",[s._v("可以使用下面的方法来做"),a("strong",[s._v("电话号码和位图的映射")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000000")]),s._v(" 对应位图最后一位："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("×"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v("…"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("000001")]),s._v("。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000001")]),s._v(" 对应位图倒数第二位："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("×"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v("…"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000010")]),s._v("（"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 向左移 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 位）。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000002")]),s._v(" 对应位图倒数第三位："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("×"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v("…"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000100")]),s._v("（"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 向左移 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 位）。\n……\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000012")]),s._v(" 对应位图的倒数第十三位："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("×"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v("…"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v("（"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 向左移 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" 位）。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("也就是说，电话号码就是1这个数字左移的次数。")]),s._v(" "),a("h2",{attrs:{id:"具体实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体实现"}},[s._v("#")]),s._v(" 具体实现")]),s._v(" "),a("p",[s._v("首先位图可以使用一个"),a("strong",[s._v("int数组")]),s._v("来实现（在Java中int占用"),a("strong",[s._v("4byte")]),s._v("）。")]),s._v(" "),a("p",[s._v("假设电话号码为 P，而通过电话号码获取位图中对应位置的方法为：")]),s._v(" "),a("p",[a("strong",[s._v("第一步")]),s._v("，因为int整数占用4*8=32bit，通过 "),a("strong",[s._v("P/32")]),s._v(" 就可以计算出该电话号码在 bitmap 数组中的下标，从而可以确定它对应的 bit 在数组中的位置。")]),s._v(" "),a("p",[a("strong",[s._v("第二步")]),s._v("，通过 "),a("strong",[s._v("P%32")]),s._v(" 就可以计算出这个电话号码在这个int数字中具体的bit的位置。只要把1向左移 "),a("strong",[s._v("P%32")]),s._v(" 位，然后把得到的值与这个数组中的值做或运算，就可以把这个电话号码在位图中对应的位设置为1。")]),s._v(" "),a("p",[s._v("以00000100号码为例。")]),s._v(" "),a("ol",[a("li",[s._v("首先计算数组下标，100 / 32 = 3，得到数组下标位3。")]),s._v(" "),a("li",[s._v("然后计算电话号码在这个int数字中具体的bit的位置，100 % 32 = 4。取余为0左移1位，故取余为4左移5位，得到000...000010000")]),s._v(" "),a("li",[s._v("将位图中对应的位设置为 1，即arr[2] = arr[2] "),a("strong",[s._v("|")]),s._v(" 000..00010000。")]),s._v(" "),a("li",[s._v("这就将电话号码映射到了位图的某一位了。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"http://img.dabin-coder.cn/image/20220423094735.png",alt:""}})]),s._v(" "),a("p",[s._v("最后，统计位图中bit值为1的数量，便能得到不同电话号码的个数了。")])])}),[],!1,null,null,null);t.default=r.exports}}]);